$date
	Mon Oct 23 02:35:30 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_bench $end
$var wire 8 ! second [7:0] $end
$var wire 2 " minute [1:0] $end
$var wire 1 # alarm $end
$var reg 1 $ clk $end
$var reg 1 % mode_1min $end
$var reg 1 & mode_2min $end
$var reg 1 ' mode_3min $end
$var reg 1 ( reset_n $end
$var reg 1 ) start $end
$var reg 1 * stop $end
$scope module kitchen_timer $end
$var wire 1 $ clk $end
$var wire 1 % mode_1min $end
$var wire 1 & mode_2min $end
$var wire 1 ' mode_3min $end
$var wire 1 ( reset_n $end
$var wire 1 ) start $end
$var wire 1 * stop $end
$var wire 1 + stop_count_w $end
$var wire 1 , stop_alarm_w $end
$var wire 1 - start_falling_w $end
$var wire 1 . start_count_w $end
$var wire 1 / start_alarm_w $end
$var wire 8 0 second [7:0] $end
$var wire 8 1 mode_count_w [7:0] $end
$var wire 2 2 minute [1:0] $end
$var wire 1 3 flag_sec_equal_zero_w $end
$var wire 1 4 end_alarm_w $end
$var wire 1 5 en_count_w $end
$var wire 1 # alarm $end
$scope module alarm_o $end
$var wire 1 $ clk $end
$var wire 1 ( reset_n $end
$var wire 1 , stop_alarm_t $end
$var wire 1 / start_alarm_t $end
$var reg 1 # alarm $end
$var reg 1 4 end_alarm_t $end
$var reg 4 6 time_alarm [3:0] $end
$upscope $end
$scope module cnt_down $end
$var wire 1 $ clk $end
$var wire 1 ( reset_n $end
$var wire 1 + stop_count_t $end
$var wire 1 . start_count_t $end
$var wire 8 7 mode_count_t [7:0] $end
$var wire 1 5 en_count_t $end
$var reg 8 8 cnt [7:0] $end
$var reg 8 9 count_max [7:0] $end
$var reg 1 3 flag_sec_equal_zero_t $end
$var reg 2 : minute [1:0] $end
$var reg 8 ; second [7:0] $end
$upscope $end
$scope module fsm $end
$var wire 1 $ clk $end
$var wire 1 5 en_count $end
$var wire 1 4 end_alarm $end
$var wire 1 3 flag_sec_equal_zero $end
$var wire 1 % mode_1min $end
$var wire 1 & mode_2min $end
$var wire 1 ' mode_3min $end
$var wire 1 ( reset_n $end
$var wire 1 ) start $end
$var wire 1 - start_falling $end
$var wire 1 + stop $end
$var wire 8 < mode_count [7:0] $end
$var reg 2 = current_state [1:0] $end
$var reg 1 > d_ff $end
$var reg 2 ? next_state [1:0] $end
$var reg 1 / start_alarm $end
$var reg 1 . start_count $end
$var reg 1 , stop_alarm $end
$var reg 1 + stop_count $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ?
x>
bx =
bz <
bx ;
bx :
bx 9
bx 8
bz 7
bx 6
05
x4
x3
bx 2
bz 1
bx 0
x/
x.
x-
x,
x+
0*
0)
1(
0'
0&
0%
0$
x#
bx "
bx !
$end
#5
0-
0,
0+
0/
0.
b0 =
0>
1$
#10
0$
#15
1$
#20
0#
b0 !
b0 0
b0 ;
b0 "
b0 2
b0 :
b0 6
b0 9
b0 8
0$
0(
#25
13
04
1$
#30
0$
1(
#35
1$
#40
0$
#45
1$
#50
b1 ?
15
b1111000 1
b1111000 7
b1111000 <
0$
1&
#55
b10 "
b10 2
b10 :
b1111000 8
b1 =
1$
#60
0$
#65
03
1$
#70
0$
#75
1$
#80
05
0$
0&
#85
1$
#90
0$
#95
1$
#100
15
b111100 1
b111100 7
b111100 <
0$
1%
#105
b1 "
b1 2
b1 :
b111100 8
1$
#110
0$
#115
1$
#120
05
0$
0%
#125
1$
#130
0$
#135
1$
#140
0$
1)
#145
1>
1$
#150
b10 ?
1-
0$
0)
#155
b111011 !
b111011 0
b111011 ;
b0 "
b0 2
b0 :
b111011 8
0-
1.
b10 =
0>
1$
#160
0$
#165
b111010 !
b111010 0
b111010 ;
b111010 8
1$
#170
0$
#175
b111001 !
b111001 0
b111001 ;
b111001 8
1$
#180
0$
#185
b111000 !
b111000 0
b111000 ;
b111000 8
1$
#190
0$
#195
b110111 !
b110111 0
b110111 ;
b110111 8
1$
#200
0$
#205
b110110 !
b110110 0
b110110 ;
b110110 8
1$
#210
0$
#215
b110101 !
b110101 0
b110101 ;
b110101 8
1$
#220
0$
#225
b110100 !
b110100 0
b110100 ;
b110100 8
1$
#230
0$
1*
#235
b110011 !
b110011 0
b110011 ;
b110011 8
1$
#240
0$
0*
#245
b110010 !
b110010 0
b110010 ;
b110010 8
1$
#250
b0 !
b0 0
b0 ;
1.
b0 8
b10 =
0$
0(
#255
b11 ?
1.
13
b10 =
1$
#260
0$
1(
#265
1#
b1 6
1/
0.
b11 =
1$
#270
0$
#275
0#
b10 6
1$
#280
0$
#285
1#
b11 6
1$
#290
b10110100 1
b10110100 7
b10110100 <
15
0$
1'
#295
b11 "
b11 2
b11 :
0#
b10110100 8
b100 6
1$
#300
05
0$
0'
#305
1#
03
b101 6
1$
#310
0$
#315
0#
b110 6
1$
#320
0$
1)
#325
1#
b111 6
1>
1$
#330
1-
0$
0)
#335
0-
0#
b1000 6
0>
1$
#340
0$
#345
1#
b1001 6
1$
#350
0$
#355
b0 ?
0#
14
b0 6
1$
#360
0$
#365
1#
0/
04
b1 6
b0 =
1$
#370
0$
#375
1$
#380
0$
#385
1$
#390
0$
#395
1$
#400
0$
#405
1$
#410
0$
#415
1$
#420
0$
#425
1$
#430
0$
#435
1$
#440
0$
#445
1$
#450
0$
#455
1$
#460
0$
#465
1$
#470
0$
#475
1$
#480
0$
#485
1$
#490
0$
#495
1$
#500
0$
#505
1$
#510
0$
#515
1$
#520
0$
#525
1$
#530
0$
#535
1$
#540
0$
#545
1$
#550
0$
#555
1$
#560
0$
#565
1$
#570
0$
#575
1$
#580
0$
#585
1$
#590
0$
#595
1$
#600
0$
#605
1$
#610
0$
#615
1$
#620
0$
#625
1$
#630
0$
#635
1$
#640
0$
#645
1$
#650
0$
#655
1$
#660
0$
#665
1$
#670
0$
#675
1$
#680
0$
#685
1$
#690
0$
#695
1$
#700
0$
#705
1$
#710
0$
#715
1$
#720
0$
#725
1$
#730
0$
#735
1$
#740
0$
#745
1$
#750
0$
#755
1$
#760
0$
#765
1$
#770
0$
#775
1$
#780
0$
#785
1$
#790
0#
b0 "
b0 2
b0 :
b0 6
b0 8
0$
0(
#795
13
1$
#800
0$
1(
#805
1$
#810
0$
#815
1$
#820
0$
#825
1$
#830
0$
#835
1$
#840
0$
#845
1$
#850
0$
#855
1$
#860
0$
#865
1$
#870
0$
#875
1$
#880
0$
#885
1$
#890
0$
#895
1$
#900
0$
#905
1$
#910
0$
#915
1$
#920
0$
#925
1$
#930
0$
#935
1$
#940
0$
#945
1$
#950
0$
#955
1$
#960
0$
#965
1$
#970
0$
#975
1$
#980
0$
#985
1$
#990
0$
#995
1$
#1000
0$
